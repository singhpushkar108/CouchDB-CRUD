{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TestServiceService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:4200\";\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        //\"content-Type\": \"application/json\"\n        'content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n        //\"Authorization\": `Bearer ${this.idToken}`,\n      })\n    };\n  }\n\n  fetchData(url) {\n    return this.http.get(this.baseUrl + url);\n  }\n  static #_ = this.ɵfac = function TestServiceService_Factory(t) {\n    return new (t || TestServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TestServiceService,\n    factory: TestServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAoBA,WAAW,QAAQ,sBAAsB;;;AAQ7D,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAFjB,YAAO,GAAO,uBAAuB;IAI5C,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIJ,WAAW,CAAC;QACvB;QACA,cAAc,EAAE;QAChB;OACD;KAEF;EATuC;;EAYxCK,SAAS,CAACC,GAAO;IACf,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAM,IAAI,CAACC,OAAO,GAAGF,GAAG,CAAC;EAC/C;EAAC;qBAjBUL,kBAAkB;EAAA;EAAA;WAAlBA,kBAAkB;IAAAQ,SAAlBR,kBAAkB;IAAAS,YAFjB;EAAM","names":["HttpHeaders","TestServiceService","constructor","http","headers","fetchData","url","get","baseUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\CouchdbFrontend\\src\\app\\test-service.service.ts"],"sourcesContent":["import { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestServiceService {\n  public baseUrl:any = \"http://localhost:4200\";\n\n  constructor(private http:HttpClient) {  }\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      //\"content-Type\": \"application/json\"\n      'content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n      //\"Authorization\": `Bearer ${this.idToken}`,\n    }),\n\n  };\n\n\n  fetchData(url:any){\n    return this.http.get<any>(this.baseUrl + url);\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}